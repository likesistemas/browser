name: ci-cd

on:
  push:
    branches:
      - master

  pull_request:

jobs:

  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          echo "CERT_PASSWORD=${{ secrets.CERT_PASSWORD }}" >> .env
          docker-compose up --build

      - name: Upload files
        uses: actions/upload-artifact@v2
        with:
          name: browser
          path: output/

  cd:
    needs: ci

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./java/
          tags: likesistemas/browser:latest
          build-args: |
            CERT_PASSWORD=${{ secrets.CERT_PASSWORD }}

      - name: Build and push using golang
        id: docker_build_golang
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./golang/          
          tags: likesistemas/browser:golang
          build-args: |
            CERT_PASSWORD=${{ secrets.CERT_PASSWORD }}

      - name: Image digest
        run: |
         echo "JAVA: ${{ steps.docker_build.outputs.digest }}"
         echo "GOLANG: ${{ steps.docker_build_golang.outputs.digest }}"